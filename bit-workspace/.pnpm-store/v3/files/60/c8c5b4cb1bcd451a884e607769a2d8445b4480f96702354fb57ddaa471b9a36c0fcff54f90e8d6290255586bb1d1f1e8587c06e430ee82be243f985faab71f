{
  "__schema": "APISchema",
  "location": {
    "filePath": "index.ts",
    "line": 2,
    "character": 1
  },
  "module": {
    "__schema": "ModuleSchema",
    "location": {
      "filePath": "index.ts",
      "line": 2,
      "character": 1
    },
    "exports": [
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 6,
          "character": 10
        },
        "name": "jestConfig",
        "exportNode": {
          "__schema": "UnImplementedSchema",
          "location": {
            "filePath": "config/jest.config.cjs",
            "line": 11,
            "character": 1
          },
          "name": "module.exports",
          "type": "PropertyAccessExpression"
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 6,
          "character": 22
        },
        "name": "prettierConfig",
        "exportNode": {
          "__schema": "UnImplementedSchema",
          "location": {
            "filePath": "config/prettier.config.cjs",
            "line": 1,
            "character": 1
          },
          "name": "module.exports",
          "type": "PropertyAccessExpression"
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 7,
          "character": 15
        },
        "name": "ReactEnvInterface",
        "exportNode": {
          "__schema": "InterfaceSchema",
          "location": {
            "filePath": "react-env-interface.ts",
            "line": 14,
            "character": 1
          },
          "signature": "interface ReactEnvInterface",
          "name": "ReactEnvInterface",
          "members": [],
          "extendsNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 15,
                "character": 11
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 15,
                  "character": 11
                },
                "name": "Env",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 16,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 16,
                  "character": 5
                },
                "name": "CompilerEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 17,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 17,
                  "character": 5
                },
                "name": "TesterEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 18,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 18,
                  "character": 5
                },
                "name": "PreviewEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 19,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 19,
                  "character": 5
                },
                "name": "SchemaEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 20,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 20,
                  "character": 5
                },
                "name": "LinterEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 21,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 21,
                  "character": 5
                },
                "name": "FormatterEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 22,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 22,
                  "character": 5
                },
                "name": "BuilderEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 23,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 23,
                  "character": 5
                },
                "name": "GeneratorEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 24,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 24,
                  "character": 5
                },
                "name": "AppsEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 25,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 25,
                  "character": 5
                },
                "name": "WorkspaceConfigEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            },
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env-interface.ts",
                "line": 26,
                "character": 5
              },
              "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 26,
                  "character": 5
                },
                "name": "PackageEnv",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
              }
            }
          ]
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 8,
          "character": 10
        },
        "name": "ReactEnv",
        "exportNode": {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "react-env.bit-env.ts",
            "line": 63,
            "character": 1
          },
          "signature": "class ReactEnv",
          "name": "ReactEnv",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 67,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 64,
                  "character": 3
                },
                "raw": "/**\n   * name of the environment. used for friendly mentions across bit.\n   */",
                "comment": "name of the environment. used for friendly mentions across bit.",
                "tags": []
              },
              "signature": "(property) ReactEnv.name: string",
              "name": "name",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 67,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "'react'"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 69,
                "character": 3
              },
              "signature": "(property) ReactEnv.type: string",
              "name": "type",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 69,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "'react'"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 71,
                "character": 3
              },
              "signature": "(property) ReactEnv.dirName: string",
              "name": "dirName",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 71,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "dirname(fileURLToPath(import.meta.url))"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 77,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 73,
                  "character": 3
                },
                "raw": "/**\n   * icon for the env. use this to build a more friendly env.\n   * uses react by default.\n   */",
                "comment": "icon for the env. use this to build a more friendly env.\nuses react by default.",
                "tags": []
              },
              "signature": "(property) ReactEnv.icon: string",
              "name": "icon",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 77,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "'https://static.bit.dev/extensions-icons/react.svg'"
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 83,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 79,
                  "character": 3
                },
                "raw": "/**\n   * create an instance of a Bit Component Compiler.\n   * Learn more: https://bit.dev/reference/compiling/set-up-compiler\n   */",
                "comment": "create an instance of a Bit Component Compiler.\nLearn more: https://bit.dev/reference/compiling/set-up-compiler",
                "tags": []
              },
              "signature": "(method) ReactEnv.compiler(): EnvHandler<Compiler>",
              "name": "compiler",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 83,
                  "character": 15
                },
                "name": "EnvHandler",
                "componentId": {
                  "scope": "teambit.envs",
                  "name": "envs"
                },
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "react-env.bit-env.ts",
                      "line": 83,
                      "character": 26
                    },
                    "name": "Compiler",
                    "componentId": {
                      "scope": "teambit.compilation",
                      "name": "compiler"
                    }
                  }
                ]
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 96,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 92,
                  "character": 3
                },
                "raw": "/**\n   * create an instance of the Bit Tester plugin.\n   * learn more: https://bit.dev/reference/testing/set-up-tester\n   */",
                "comment": "create an instance of the Bit Tester plugin.\nlearn more: https://bit.dev/reference/testing/set-up-tester",
                "tags": []
              },
              "signature": "(method) ReactEnv.tester(): EnvHandler<Tester>",
              "name": "tester",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 96,
                  "character": 13
                },
                "name": "EnvHandler",
                "componentId": {
                  "scope": "teambit.envs",
                  "name": "envs"
                },
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "react-env.bit-env.ts",
                      "line": 96,
                      "character": 24
                    },
                    "name": "Tester",
                    "componentId": {
                      "scope": "teambit.defender",
                      "name": "tester"
                    }
                  }
                ]
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 109,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 106,
                  "character": 3
                },
                "raw": "/**\n   * create an instance for Bit Preview.\n   */",
                "comment": "create an instance for Bit Preview.",
                "tags": []
              },
              "signature": "(method) ReactEnv.preview(): EnvHandler<Preview>",
              "name": "preview",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 109,
                  "character": 14
                },
                "name": "EnvHandler",
                "componentId": {
                  "scope": "teambit.envs",
                  "name": "envs"
                },
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "react-env.bit-env.ts",
                      "line": 109,
                      "character": 25
                    },
                    "name": "Preview",
                    "componentId": {
                      "scope": "teambit.preview",
                      "name": "preview"
                    }
                  }
                ]
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 137,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 133,
                  "character": 3
                },
                "raw": "/**\n   * returns an instance of the default TypeScript extractor.\n   * used by default for type inference for both JS and TS.\n   */",
                "comment": "returns an instance of the default TypeScript extractor.\nused by default for type inference for both JS and TS.",
                "tags": []
              },
              "signature": "(method) ReactEnv.schemaExtractor(): EnvHandler<SchemaExtractor>",
              "name": "schemaExtractor",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 137,
                  "character": 22
                },
                "name": "EnvHandler",
                "componentId": {
                  "scope": "teambit.envs",
                  "name": "envs"
                },
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "react-env.bit-env.ts",
                      "line": 137,
                      "character": 33
                    },
                    "name": "SchemaExtractor",
                    "componentId": {
                      "scope": "teambit.semantics",
                      "name": "schema"
                    }
                  }
                ]
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 147,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 143,
                  "character": 3
                },
                "raw": "/**\n   * add a Bit Linter plugin.\n   * learn more: https://bit.dev/reference/testing/set-up-tester\n   */",
                "comment": "add a Bit Linter plugin.\nlearn more: https://bit.dev/reference/testing/set-up-tester",
                "tags": []
              },
              "signature": "(method) ReactEnv.linter(): EnvHandler<Linter>",
              "name": "linter",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 147,
                  "character": 3
                },
                "type": "EnvHandler<Linter>"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 162,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 158,
                  "character": 3
                },
                "raw": "/**\n   * create a formatter instance.\n   * learn more: https://bit.dev/reference/formatting/set-up-formatter\n   */",
                "comment": "create a formatter instance.\nlearn more: https://bit.dev/reference/formatting/set-up-formatter",
                "tags": []
              },
              "signature": "(method) ReactEnv.formatter(): EnvHandler<Formatter>",
              "name": "formatter",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 162,
                  "character": 3
                },
                "type": "EnvHandler<Formatter>"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 172,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 168,
                  "character": 3
                },
                "raw": "/**\n   * Add your build pipeline.\n   * learn more: https://bit.dev/docs/react-env/build-pipelines\n   */",
                "comment": "Add your build pipeline.\nlearn more: https://bit.dev/docs/react-env/build-pipelines",
                "tags": []
              },
              "signature": "(method) ReactEnv.build(): Pipeline",
              "name": "build",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 172,
                  "character": 3
                },
                "name": "Pipeline",
                "componentId": {
                  "scope": "teambit.pipelines",
                  "name": "builder"
                }
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 200,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 196,
                  "character": 3
                },
                "raw": "/**\n   * add build tasks to execute upon [snap](https://bit.dev/docs/snaps).\n   * use the snap pipeline for staging and test deployments\n   */",
                "comment": "add build tasks to execute upon [snap](https://bit.dev/docs/snaps).\nuse the snap pipeline for staging and test deployments",
                "tags": []
              },
              "signature": "(method) ReactEnv.snap(): Pipeline",
              "name": "snap",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 200,
                  "character": 3
                },
                "name": "Pipeline",
                "componentId": {
                  "scope": "teambit.pipelines",
                  "name": "builder"
                }
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 209,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 204,
                  "character": 3
                },
                "raw": "/**\n   * add build tasks to execute upon [tag](https://bit.dev/docs/tags).\n   * use the tag pipeline for deployments, or other tasks required for\n   * publishing a semantic version for a component.\n   */",
                "comment": "add build tasks to execute upon [tag](https://bit.dev/docs/tags).\nuse the tag pipeline for deployments, or other tasks required for\npublishing a semantic version for a component.",
                "tags": []
              },
              "signature": "(method) ReactEnv.tag(): Pipeline",
              "name": "tag",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 209,
                  "character": 3
                },
                "name": "Pipeline",
                "componentId": {
                  "scope": "teambit.pipelines",
                  "name": "builder"
                }
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 216,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 213,
                  "character": 3
                },
                "raw": "/**\n   * add configuration writers to the workspace, to sync IDE features with tools operated by Bit\n   */",
                "comment": "add configuration writers to the workspace, to sync IDE features with tools operated by Bit",
                "tags": []
              },
              "signature": "(method) ReactEnv.workspaceConfig(): ConfigWriterList",
              "name": "workspaceConfig",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 216,
                  "character": 3
                },
                "name": "ConfigWriterList",
                "componentId": {
                  "scope": "teambit.workspace",
                  "name": "workspace-config-files"
                }
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 236,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 232,
                  "character": 3
                },
                "raw": "/**\n   * a list of starters for new projects. this helps create a quick and\n   * standardized\n   */",
                "comment": "a list of starters for new projects. this helps create a quick and\nstandardized",
                "tags": []
              },
              "signature": "(method) ReactEnv.starters(): (context: ServiceHandlerContext) => StarterList",
              "name": "starters",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 236,
                  "character": 3
                },
                "type": "(context: ServiceHandlerContext) => StarterList"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 245,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 240,
                  "character": 3
                },
                "raw": "/**\n   * set a list of component templates to use across your\n   * workspaces. new workspaces would be set to include\n   * your envs by default.\n   */",
                "comment": "set a list of component templates to use across your\nworkspaces. new workspaces would be set to include\nyour envs by default.",
                "tags": []
              },
              "signature": "(method) ReactEnv.generators(): (context: ServiceHandlerContext) => TemplateList",
              "name": "generators",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 245,
                  "character": 3
                },
                "type": "(context: ServiceHandlerContext) => TemplateList"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 268,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 265,
                  "character": 3
                },
                "raw": "/**\n   * configure and control the packaging process of components.\n   */",
                "comment": "configure and control the packaging process of components.",
                "tags": []
              },
              "signature": "(method) ReactEnv.package(): EnvHandler<PackageGenerator>",
              "name": "package",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 268,
                  "character": 3
                },
                "type": "EnvHandler<PackageGenerator>"
              },
              "modifiers": []
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 275,
                "character": 3
              },
              "signature": "(property) ReactEnv.tsconfigPath: string",
              "name": "tsconfigPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 275,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./config/tsconfig.json')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 277,
                "character": 3
              },
              "signature": "(property) ReactEnv.tsTypesPath: string",
              "name": "tsTypesPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 277,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "'./types'"
            },
            {
              "__schema": "GetAccessorSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 279,
                "character": 3
              },
              "signature": "(getter) ReactEnv.types: string[]",
              "name": "types",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 279,
                  "character": 3
                },
                "type": "string[]"
              }
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 291,
                "character": 3
              },
              "signature": "(property) ReactEnv.jestConfigPath: string",
              "name": "jestConfigPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 291,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./config/jest.config.cjs')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 293,
                "character": 3
              },
              "signature": "(property) ReactEnv.vitestConfigPath: string",
              "name": "vitestConfigPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 293,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./config/vitest.config.mjs')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 295,
                "character": 3
              },
              "signature": "(property) ReactEnv.eslintConfigPath: string",
              "name": "eslintConfigPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 295,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./config/eslintrc.cjs')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 297,
                "character": 3
              },
              "signature": "(property) ReactEnv.eslintExtensions: string[]",
              "name": "eslintExtensions",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 297,
                  "character": 3
                },
                "type": "string[]"
              },
              "isOptional": true,
              "defaultValue": "['.ts', '.tsx', '.js', '.jsx', '.mjs']"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 299,
                "character": 3
              },
              "signature": "(property) ReactEnv.prettierConfigPath: string",
              "name": "prettierConfigPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 299,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve(\n    './config/prettier.config.cjs'\n  )"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 303,
                "character": 3
              },
              "signature": "(property) ReactEnv.prettierExtensions: string[]",
              "name": "prettierExtensions",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 303,
                  "character": 3
                },
                "type": "string[]"
              },
              "isOptional": true,
              "defaultValue": "[\n    '.js',\n    '.jsx',\n    '.ts',\n    '.tsx',\n    '.mjs',\n    '.cjs',\n    '.json',\n    '.css',\n    '.scss',\n    '.md',\n    '.mdx',\n    '.html',\n    '.yml',\n    '.yaml',\n  ]"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 320,
                "character": 3
              },
              "signature": "(property) ReactEnv.previewMounter: string",
              "name": "previewMounter",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 320,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./preview/mounter.js')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 322,
                "character": 3
              },
              "signature": "(property) ReactEnv.previewDocsTemplate: string",
              "name": "previewDocsTemplate",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 322,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./preview/docs.js')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 328,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 324,
                  "character": 3
                },
                "raw": "/**\n   * Default npm ignore paths.\n   * Will ignore the \"artifacts\" directory by default.\n   */",
                "comment": "Default npm ignore paths.\nWill ignore the \"artifacts\" directory by default.",
                "tags": []
              },
              "signature": "(property) ReactEnv.npmIgnore: string[]",
              "name": "npmIgnore",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 328,
                  "character": 3
                },
                "type": "string[]"
              },
              "isOptional": true,
              "defaultValue": "[`${CAPSULE_ARTIFACTS_DIR}/`, '.vitest']"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 333,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 330,
                  "character": 3
                },
                "raw": "/**\n   * Default package.json modifications.\n   */",
                "comment": "Default package.json modifications.",
                "tags": []
              },
              "signature": "(property) ReactEnv.packageJson: PackageJsonProps",
              "name": "packageJson",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 333,
                  "character": 3
                },
                "name": "PackageJsonProps",
                "componentId": {
                  "scope": "teambit.pkg",
                  "name": "pkg"
                }
              },
              "isOptional": true,
              "defaultValue": "{\n    type: 'module',\n    main: 'dist/{main}.js',\n    types: '{main}.ts',\n  }"
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 63,
                "character": 34
              },
              "name": "implements ReactEnvInterface",
              "typeArgs": [],
              "expression": {
                "__schema": "InterfaceSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 14,
                  "character": 1
                },
                "name": "ReactEnvInterface",
                "signature": "interface ReactEnvInterface",
                "extendsNodes": [
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 15,
                      "character": 11
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 15,
                        "character": 11
                      },
                      "name": "Env",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 16,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 16,
                        "character": 5
                      },
                      "name": "CompilerEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 17,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 17,
                        "character": 5
                      },
                      "name": "TesterEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 18,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 18,
                        "character": 5
                      },
                      "name": "PreviewEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 19,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 19,
                        "character": 5
                      },
                      "name": "SchemaEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 20,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 20,
                        "character": 5
                      },
                      "name": "LinterEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 21,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 21,
                        "character": 5
                      },
                      "name": "FormatterEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 22,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 22,
                        "character": 5
                      },
                      "name": "BuilderEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 23,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 23,
                        "character": 5
                      },
                      "name": "GeneratorEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 24,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 24,
                        "character": 5
                      },
                      "name": "AppsEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 25,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 25,
                        "character": 5
                      },
                      "name": "WorkspaceConfigEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 26,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 26,
                        "character": 5
                      },
                      "name": "PackageEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  }
                ],
                "members": []
              }
            }
          ]
        }
      }
    ],
    "internals": []
  },
  "internals": [
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "react-env.bit-env.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "react-env.bit-env.ts",
            "line": 63,
            "character": 1
          },
          "signature": "class ReactEnv",
          "name": "ReactEnv",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 67,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 64,
                  "character": 3
                },
                "raw": "/**\n   * name of the environment. used for friendly mentions across bit.\n   */",
                "comment": "name of the environment. used for friendly mentions across bit.",
                "tags": []
              },
              "signature": "(property) ReactEnv.name: string",
              "name": "name",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 67,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "'react'"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 69,
                "character": 3
              },
              "signature": "(property) ReactEnv.type: string",
              "name": "type",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 69,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "'react'"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 71,
                "character": 3
              },
              "signature": "(property) ReactEnv.dirName: string",
              "name": "dirName",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 71,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "dirname(fileURLToPath(import.meta.url))"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 77,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 73,
                  "character": 3
                },
                "raw": "/**\n   * icon for the env. use this to build a more friendly env.\n   * uses react by default.\n   */",
                "comment": "icon for the env. use this to build a more friendly env.\nuses react by default.",
                "tags": []
              },
              "signature": "(property) ReactEnv.icon: string",
              "name": "icon",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 77,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "'https://static.bit.dev/extensions-icons/react.svg'"
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 83,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 79,
                  "character": 3
                },
                "raw": "/**\n   * create an instance of a Bit Component Compiler.\n   * Learn more: https://bit.dev/reference/compiling/set-up-compiler\n   */",
                "comment": "create an instance of a Bit Component Compiler.\nLearn more: https://bit.dev/reference/compiling/set-up-compiler",
                "tags": []
              },
              "signature": "(method) ReactEnv.compiler(): EnvHandler<Compiler>",
              "name": "compiler",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 83,
                  "character": 15
                },
                "name": "EnvHandler",
                "componentId": {
                  "scope": "teambit.envs",
                  "name": "envs"
                },
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "react-env.bit-env.ts",
                      "line": 83,
                      "character": 26
                    },
                    "name": "Compiler",
                    "componentId": {
                      "scope": "teambit.compilation",
                      "name": "compiler"
                    }
                  }
                ]
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 96,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 92,
                  "character": 3
                },
                "raw": "/**\n   * create an instance of the Bit Tester plugin.\n   * learn more: https://bit.dev/reference/testing/set-up-tester\n   */",
                "comment": "create an instance of the Bit Tester plugin.\nlearn more: https://bit.dev/reference/testing/set-up-tester",
                "tags": []
              },
              "signature": "(method) ReactEnv.tester(): EnvHandler<Tester>",
              "name": "tester",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 96,
                  "character": 13
                },
                "name": "EnvHandler",
                "componentId": {
                  "scope": "teambit.envs",
                  "name": "envs"
                },
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "react-env.bit-env.ts",
                      "line": 96,
                      "character": 24
                    },
                    "name": "Tester",
                    "componentId": {
                      "scope": "teambit.defender",
                      "name": "tester"
                    }
                  }
                ]
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 109,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 106,
                  "character": 3
                },
                "raw": "/**\n   * create an instance for Bit Preview.\n   */",
                "comment": "create an instance for Bit Preview.",
                "tags": []
              },
              "signature": "(method) ReactEnv.preview(): EnvHandler<Preview>",
              "name": "preview",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 109,
                  "character": 14
                },
                "name": "EnvHandler",
                "componentId": {
                  "scope": "teambit.envs",
                  "name": "envs"
                },
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "react-env.bit-env.ts",
                      "line": 109,
                      "character": 25
                    },
                    "name": "Preview",
                    "componentId": {
                      "scope": "teambit.preview",
                      "name": "preview"
                    }
                  }
                ]
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 137,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 133,
                  "character": 3
                },
                "raw": "/**\n   * returns an instance of the default TypeScript extractor.\n   * used by default for type inference for both JS and TS.\n   */",
                "comment": "returns an instance of the default TypeScript extractor.\nused by default for type inference for both JS and TS.",
                "tags": []
              },
              "signature": "(method) ReactEnv.schemaExtractor(): EnvHandler<SchemaExtractor>",
              "name": "schemaExtractor",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 137,
                  "character": 22
                },
                "name": "EnvHandler",
                "componentId": {
                  "scope": "teambit.envs",
                  "name": "envs"
                },
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "react-env.bit-env.ts",
                      "line": 137,
                      "character": 33
                    },
                    "name": "SchemaExtractor",
                    "componentId": {
                      "scope": "teambit.semantics",
                      "name": "schema"
                    }
                  }
                ]
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 147,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 143,
                  "character": 3
                },
                "raw": "/**\n   * add a Bit Linter plugin.\n   * learn more: https://bit.dev/reference/testing/set-up-tester\n   */",
                "comment": "add a Bit Linter plugin.\nlearn more: https://bit.dev/reference/testing/set-up-tester",
                "tags": []
              },
              "signature": "(method) ReactEnv.linter(): EnvHandler<Linter>",
              "name": "linter",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 147,
                  "character": 3
                },
                "type": "EnvHandler<Linter>"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 162,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 158,
                  "character": 3
                },
                "raw": "/**\n   * create a formatter instance.\n   * learn more: https://bit.dev/reference/formatting/set-up-formatter\n   */",
                "comment": "create a formatter instance.\nlearn more: https://bit.dev/reference/formatting/set-up-formatter",
                "tags": []
              },
              "signature": "(method) ReactEnv.formatter(): EnvHandler<Formatter>",
              "name": "formatter",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 162,
                  "character": 3
                },
                "type": "EnvHandler<Formatter>"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 172,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 168,
                  "character": 3
                },
                "raw": "/**\n   * Add your build pipeline.\n   * learn more: https://bit.dev/docs/react-env/build-pipelines\n   */",
                "comment": "Add your build pipeline.\nlearn more: https://bit.dev/docs/react-env/build-pipelines",
                "tags": []
              },
              "signature": "(method) ReactEnv.build(): Pipeline",
              "name": "build",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 172,
                  "character": 3
                },
                "name": "Pipeline",
                "componentId": {
                  "scope": "teambit.pipelines",
                  "name": "builder"
                }
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 200,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 196,
                  "character": 3
                },
                "raw": "/**\n   * add build tasks to execute upon [snap](https://bit.dev/docs/snaps).\n   * use the snap pipeline for staging and test deployments\n   */",
                "comment": "add build tasks to execute upon [snap](https://bit.dev/docs/snaps).\nuse the snap pipeline for staging and test deployments",
                "tags": []
              },
              "signature": "(method) ReactEnv.snap(): Pipeline",
              "name": "snap",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 200,
                  "character": 3
                },
                "name": "Pipeline",
                "componentId": {
                  "scope": "teambit.pipelines",
                  "name": "builder"
                }
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 209,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 204,
                  "character": 3
                },
                "raw": "/**\n   * add build tasks to execute upon [tag](https://bit.dev/docs/tags).\n   * use the tag pipeline for deployments, or other tasks required for\n   * publishing a semantic version for a component.\n   */",
                "comment": "add build tasks to execute upon [tag](https://bit.dev/docs/tags).\nuse the tag pipeline for deployments, or other tasks required for\npublishing a semantic version for a component.",
                "tags": []
              },
              "signature": "(method) ReactEnv.tag(): Pipeline",
              "name": "tag",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 209,
                  "character": 3
                },
                "name": "Pipeline",
                "componentId": {
                  "scope": "teambit.pipelines",
                  "name": "builder"
                }
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 216,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 213,
                  "character": 3
                },
                "raw": "/**\n   * add configuration writers to the workspace, to sync IDE features with tools operated by Bit\n   */",
                "comment": "add configuration writers to the workspace, to sync IDE features with tools operated by Bit",
                "tags": []
              },
              "signature": "(method) ReactEnv.workspaceConfig(): ConfigWriterList",
              "name": "workspaceConfig",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 216,
                  "character": 3
                },
                "name": "ConfigWriterList",
                "componentId": {
                  "scope": "teambit.workspace",
                  "name": "workspace-config-files"
                }
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 236,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 232,
                  "character": 3
                },
                "raw": "/**\n   * a list of starters for new projects. this helps create a quick and\n   * standardized\n   */",
                "comment": "a list of starters for new projects. this helps create a quick and\nstandardized",
                "tags": []
              },
              "signature": "(method) ReactEnv.starters(): (context: ServiceHandlerContext) => StarterList",
              "name": "starters",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 236,
                  "character": 3
                },
                "type": "(context: ServiceHandlerContext) => StarterList"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 245,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 240,
                  "character": 3
                },
                "raw": "/**\n   * set a list of component templates to use across your\n   * workspaces. new workspaces would be set to include\n   * your envs by default.\n   */",
                "comment": "set a list of component templates to use across your\nworkspaces. new workspaces would be set to include\nyour envs by default.",
                "tags": []
              },
              "signature": "(method) ReactEnv.generators(): (context: ServiceHandlerContext) => TemplateList",
              "name": "generators",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 245,
                  "character": 3
                },
                "type": "(context: ServiceHandlerContext) => TemplateList"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 268,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 265,
                  "character": 3
                },
                "raw": "/**\n   * configure and control the packaging process of components.\n   */",
                "comment": "configure and control the packaging process of components.",
                "tags": []
              },
              "signature": "(method) ReactEnv.package(): EnvHandler<PackageGenerator>",
              "name": "package",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 268,
                  "character": 3
                },
                "type": "EnvHandler<PackageGenerator>"
              },
              "modifiers": []
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 275,
                "character": 3
              },
              "signature": "(property) ReactEnv.tsconfigPath: string",
              "name": "tsconfigPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 275,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./config/tsconfig.json')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 277,
                "character": 3
              },
              "signature": "(property) ReactEnv.tsTypesPath: string",
              "name": "tsTypesPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 277,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "'./types'"
            },
            {
              "__schema": "GetAccessorSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 279,
                "character": 3
              },
              "signature": "(getter) ReactEnv.types: string[]",
              "name": "types",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 279,
                  "character": 3
                },
                "type": "string[]"
              }
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 291,
                "character": 3
              },
              "signature": "(property) ReactEnv.jestConfigPath: string",
              "name": "jestConfigPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 291,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./config/jest.config.cjs')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 293,
                "character": 3
              },
              "signature": "(property) ReactEnv.vitestConfigPath: string",
              "name": "vitestConfigPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 293,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./config/vitest.config.mjs')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 295,
                "character": 3
              },
              "signature": "(property) ReactEnv.eslintConfigPath: string",
              "name": "eslintConfigPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 295,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./config/eslintrc.cjs')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 297,
                "character": 3
              },
              "signature": "(property) ReactEnv.eslintExtensions: string[]",
              "name": "eslintExtensions",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 297,
                  "character": 3
                },
                "type": "string[]"
              },
              "isOptional": true,
              "defaultValue": "['.ts', '.tsx', '.js', '.jsx', '.mjs']"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 299,
                "character": 3
              },
              "signature": "(property) ReactEnv.prettierConfigPath: string",
              "name": "prettierConfigPath",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 299,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve(\n    './config/prettier.config.cjs'\n  )"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 303,
                "character": 3
              },
              "signature": "(property) ReactEnv.prettierExtensions: string[]",
              "name": "prettierExtensions",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 303,
                  "character": 3
                },
                "type": "string[]"
              },
              "isOptional": true,
              "defaultValue": "[\n    '.js',\n    '.jsx',\n    '.ts',\n    '.tsx',\n    '.mjs',\n    '.cjs',\n    '.json',\n    '.css',\n    '.scss',\n    '.md',\n    '.mdx',\n    '.html',\n    '.yml',\n    '.yaml',\n  ]"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 320,
                "character": 3
              },
              "signature": "(property) ReactEnv.previewMounter: string",
              "name": "previewMounter",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 320,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./preview/mounter.js')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 322,
                "character": 3
              },
              "signature": "(property) ReactEnv.previewDocsTemplate: string",
              "name": "previewDocsTemplate",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 322,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "require.resolve('./preview/docs.js')"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 328,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 324,
                  "character": 3
                },
                "raw": "/**\n   * Default npm ignore paths.\n   * Will ignore the \"artifacts\" directory by default.\n   */",
                "comment": "Default npm ignore paths.\nWill ignore the \"artifacts\" directory by default.",
                "tags": []
              },
              "signature": "(property) ReactEnv.npmIgnore: string[]",
              "name": "npmIgnore",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 328,
                  "character": 3
                },
                "type": "string[]"
              },
              "isOptional": true,
              "defaultValue": "[`${CAPSULE_ARTIFACTS_DIR}/`, '.vitest']"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 333,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 330,
                  "character": 3
                },
                "raw": "/**\n   * Default package.json modifications.\n   */",
                "comment": "Default package.json modifications.",
                "tags": []
              },
              "signature": "(property) ReactEnv.packageJson: PackageJsonProps",
              "name": "packageJson",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 333,
                  "character": 3
                },
                "name": "PackageJsonProps",
                "componentId": {
                  "scope": "teambit.pkg",
                  "name": "pkg"
                }
              },
              "isOptional": true,
              "defaultValue": "{\n    type: 'module',\n    main: 'dist/{main}.js',\n    types: '{main}.ts',\n  }"
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 63,
                "character": 34
              },
              "name": "implements ReactEnvInterface",
              "typeArgs": [],
              "expression": {
                "__schema": "InterfaceSchema",
                "location": {
                  "filePath": "react-env-interface.ts",
                  "line": 14,
                  "character": 1
                },
                "name": "ReactEnvInterface",
                "signature": "interface ReactEnvInterface",
                "extendsNodes": [
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 15,
                      "character": 11
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 15,
                        "character": 11
                      },
                      "name": "Env",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 16,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 16,
                        "character": 5
                      },
                      "name": "CompilerEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 17,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 17,
                        "character": 5
                      },
                      "name": "TesterEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 18,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 18,
                        "character": 5
                      },
                      "name": "PreviewEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 19,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 19,
                        "character": 5
                      },
                      "name": "SchemaEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 20,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 20,
                        "character": 5
                      },
                      "name": "LinterEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 21,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 21,
                        "character": 5
                      },
                      "name": "FormatterEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 22,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 22,
                        "character": 5
                      },
                      "name": "BuilderEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 23,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 23,
                        "character": 5
                      },
                      "name": "GeneratorEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 24,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 24,
                        "character": 5
                      },
                      "name": "AppsEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 25,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 25,
                        "character": 5
                      },
                      "name": "WorkspaceConfigEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  },
                  {
                    "__schema": "ExpressionWithTypeArgumentsSchema",
                    "name": "extends Env,\n    CompilerEnv,\n    TesterEnv,\n    PreviewEnv,\n    SchemaEnv,\n    LinterEnv,\n    FormatterEnv,\n    BuilderEnv,\n    GeneratorEnv,\n    AppsEnv,\n    WorkspaceConfigEnv,\n    PackageEnv",
                    "location": {
                      "filePath": "react-env-interface.ts",
                      "line": 26,
                      "character": 5
                    },
                    "typeArgs": [],
                    "expression": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "react-env-interface.ts",
                        "line": 26,
                        "character": 5
                      },
                      "name": "PackageEnv",
                      "packageName": "/tmp/capsules-root/sign-capsules/2024-7-22/1gnq2jn/bitdev.react_react-env@0920ce4f415b74a6f290ff35dcd3f650df7f32e0/react-env-interface.ts"
                    }
                  }
                ],
                "members": []
              }
            }
          ]
        },
        {
          "__schema": "LiteralValueSchema",
          "location": {
            "filePath": "react-env.bit-env.ts",
            "line": 340,
            "character": 16
          },
          "value": "new ReactEnv()"
        }
      ],
      "internals": [
        {
          "__schema": "UnImplementedSchema",
          "location": {
            "filePath": "react-env.bit-env.ts",
            "line": 58,
            "character": 1
          },
          "name": "NativeCompileCache.uninstall();",
          "type": "ExpressionStatement"
        },
        {
          "__schema": "ModuleSchema",
          "location": {
            "filePath": "react-env.bit-env.ts",
            "line": 60,
            "character": 1
          },
          "exports": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "react-env.bit-env.ts",
                "line": 60,
                "character": 7
              },
              "signature": "const require: NodeRequire",
              "name": "require",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "react-env.bit-env.ts",
                  "line": 60,
                  "character": 7
                },
                "type": "NodeRequire"
              },
              "isOptional": false,
              "defaultValue": "createRequire(import.meta.url)"
            }
          ],
          "internals": []
        }
      ]
    }
  ],
  "componentId": {
    "scope": "bitdev.react",
    "name": "react-env",
    "version": "0920ce4f415b74a6f290ff35dcd3f650df7f32e0"
  },
  "taggedModuleExports": []
}